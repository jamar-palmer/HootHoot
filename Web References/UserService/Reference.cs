//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace OwlSpace.UserService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="UsersSoap", Namespace="http://tempuri.org/")]
    public partial class Users : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback adminViewOperationCompleted;
        
        private System.Threading.SendOrPostCallback addCourseOperationCompleted;
        
        private System.Threading.SendOrPostCallback modCourseOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteCourseOperationCompleted;
        
        private System.Threading.SendOrPostCallback catalogViewOperationCompleted;
        
        private System.Threading.SendOrPostCallback detailsViewOperationCompleted;
        
        private System.Threading.SendOrPostCallback addFeedbackOperationCompleted;
        
        private System.Threading.SendOrPostCallback fetchPrereqOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFeedbackOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPreReqOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSemestersOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeRosterOperationCompleted;
        
        private System.Threading.SendOrPostCallback encryptOperationCompleted;
        
        private System.Threading.SendOrPostCallback decryptOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Users() {
            this.Url = global::OwlSpace.Properties.Settings.Default.OwlSpace_UserService_Users;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event adminViewCompletedEventHandler adminViewCompleted;
        
        /// <remarks/>
        public event addCourseCompletedEventHandler addCourseCompleted;
        
        /// <remarks/>
        public event modCourseCompletedEventHandler modCourseCompleted;
        
        /// <remarks/>
        public event deleteCourseCompletedEventHandler deleteCourseCompleted;
        
        /// <remarks/>
        public event catalogViewCompletedEventHandler catalogViewCompleted;
        
        /// <remarks/>
        public event detailsViewCompletedEventHandler detailsViewCompleted;
        
        /// <remarks/>
        public event addFeedbackCompletedEventHandler addFeedbackCompleted;
        
        /// <remarks/>
        public event fetchPrereqCompletedEventHandler fetchPrereqCompleted;
        
        /// <remarks/>
        public event getFeedbackCompletedEventHandler getFeedbackCompleted;
        
        /// <remarks/>
        public event getNameCompletedEventHandler getNameCompleted;
        
        /// <remarks/>
        public event getPreReqCompletedEventHandler getPreReqCompleted;
        
        /// <remarks/>
        public event getSemestersCompletedEventHandler getSemestersCompleted;
        
        /// <remarks/>
        public event removeRosterCompletedEventHandler removeRosterCompleted;
        
        /// <remarks/>
        public event encryptCompletedEventHandler encryptCompleted;
        
        /// <remarks/>
        public event decryptCompletedEventHandler decryptCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/adminView", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet adminView() {
            object[] results = this.Invoke("adminView", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void adminViewAsync() {
            this.adminViewAsync(null);
        }
        
        /// <remarks/>
        public void adminViewAsync(object userState) {
            if ((this.adminViewOperationCompleted == null)) {
                this.adminViewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnadminViewOperationCompleted);
            }
            this.InvokeAsync("adminView", new object[0], this.adminViewOperationCompleted, userState);
        }
        
        private void OnadminViewOperationCompleted(object arg) {
            if ((this.adminViewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.adminViewCompleted(this, new adminViewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addCourse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool addCourse(string title, string description, string hours, string program, string crn, string prereq, string repeat, string semester) {
            object[] results = this.Invoke("addCourse", new object[] {
                        title,
                        description,
                        hours,
                        program,
                        crn,
                        prereq,
                        repeat,
                        semester});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void addCourseAsync(string title, string description, string hours, string program, string crn, string prereq, string repeat, string semester) {
            this.addCourseAsync(title, description, hours, program, crn, prereq, repeat, semester, null);
        }
        
        /// <remarks/>
        public void addCourseAsync(string title, string description, string hours, string program, string crn, string prereq, string repeat, string semester, object userState) {
            if ((this.addCourseOperationCompleted == null)) {
                this.addCourseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddCourseOperationCompleted);
            }
            this.InvokeAsync("addCourse", new object[] {
                        title,
                        description,
                        hours,
                        program,
                        crn,
                        prereq,
                        repeat,
                        semester}, this.addCourseOperationCompleted, userState);
        }
        
        private void OnaddCourseOperationCompleted(object arg) {
            if ((this.addCourseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addCourseCompleted(this, new addCourseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/modCourse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool modCourse(string title, string description, string hours, string program, string crn, string prereq, string repeat, string semester) {
            object[] results = this.Invoke("modCourse", new object[] {
                        title,
                        description,
                        hours,
                        program,
                        crn,
                        prereq,
                        repeat,
                        semester});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void modCourseAsync(string title, string description, string hours, string program, string crn, string prereq, string repeat, string semester) {
            this.modCourseAsync(title, description, hours, program, crn, prereq, repeat, semester, null);
        }
        
        /// <remarks/>
        public void modCourseAsync(string title, string description, string hours, string program, string crn, string prereq, string repeat, string semester, object userState) {
            if ((this.modCourseOperationCompleted == null)) {
                this.modCourseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodCourseOperationCompleted);
            }
            this.InvokeAsync("modCourse", new object[] {
                        title,
                        description,
                        hours,
                        program,
                        crn,
                        prereq,
                        repeat,
                        semester}, this.modCourseOperationCompleted, userState);
        }
        
        private void OnmodCourseOperationCompleted(object arg) {
            if ((this.modCourseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modCourseCompleted(this, new modCourseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteCourse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteCourse(string title, string program, string crn) {
            object[] results = this.Invoke("deleteCourse", new object[] {
                        title,
                        program,
                        crn});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteCourseAsync(string title, string program, string crn) {
            this.deleteCourseAsync(title, program, crn, null);
        }
        
        /// <remarks/>
        public void deleteCourseAsync(string title, string program, string crn, object userState) {
            if ((this.deleteCourseOperationCompleted == null)) {
                this.deleteCourseOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteCourseOperationCompleted);
            }
            this.InvokeAsync("deleteCourse", new object[] {
                        title,
                        program,
                        crn}, this.deleteCourseOperationCompleted, userState);
        }
        
        private void OndeleteCourseOperationCompleted(object arg) {
            if ((this.deleteCourseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCourseCompleted(this, new deleteCourseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/catalogView", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet catalogView() {
            object[] results = this.Invoke("catalogView", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void catalogViewAsync() {
            this.catalogViewAsync(null);
        }
        
        /// <remarks/>
        public void catalogViewAsync(object userState) {
            if ((this.catalogViewOperationCompleted == null)) {
                this.catalogViewOperationCompleted = new System.Threading.SendOrPostCallback(this.OncatalogViewOperationCompleted);
            }
            this.InvokeAsync("catalogView", new object[0], this.catalogViewOperationCompleted, userState);
        }
        
        private void OncatalogViewOperationCompleted(object arg) {
            if ((this.catalogViewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.catalogViewCompleted(this, new catalogViewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/detailsView", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet detailsView(string title, string program, string crn) {
            object[] results = this.Invoke("detailsView", new object[] {
                        title,
                        program,
                        crn});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void detailsViewAsync(string title, string program, string crn) {
            this.detailsViewAsync(title, program, crn, null);
        }
        
        /// <remarks/>
        public void detailsViewAsync(string title, string program, string crn, object userState) {
            if ((this.detailsViewOperationCompleted == null)) {
                this.detailsViewOperationCompleted = new System.Threading.SendOrPostCallback(this.OndetailsViewOperationCompleted);
            }
            this.InvokeAsync("detailsView", new object[] {
                        title,
                        program,
                        crn}, this.detailsViewOperationCompleted, userState);
        }
        
        private void OndetailsViewOperationCompleted(object arg) {
            if ((this.detailsViewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.detailsViewCompleted(this, new detailsViewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addFeedback", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool addFeedback(string title, string program, string crn, string email, string content) {
            object[] results = this.Invoke("addFeedback", new object[] {
                        title,
                        program,
                        crn,
                        email,
                        content});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void addFeedbackAsync(string title, string program, string crn, string email, string content) {
            this.addFeedbackAsync(title, program, crn, email, content, null);
        }
        
        /// <remarks/>
        public void addFeedbackAsync(string title, string program, string crn, string email, string content, object userState) {
            if ((this.addFeedbackOperationCompleted == null)) {
                this.addFeedbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddFeedbackOperationCompleted);
            }
            this.InvokeAsync("addFeedback", new object[] {
                        title,
                        program,
                        crn,
                        email,
                        content}, this.addFeedbackOperationCompleted, userState);
        }
        
        private void OnaddFeedbackOperationCompleted(object arg) {
            if ((this.addFeedbackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addFeedbackCompleted(this, new addFeedbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/fetchPrereq", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool fetchPrereq(string prereq) {
            object[] results = this.Invoke("fetchPrereq", new object[] {
                        prereq});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void fetchPrereqAsync(string prereq) {
            this.fetchPrereqAsync(prereq, null);
        }
        
        /// <remarks/>
        public void fetchPrereqAsync(string prereq, object userState) {
            if ((this.fetchPrereqOperationCompleted == null)) {
                this.fetchPrereqOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfetchPrereqOperationCompleted);
            }
            this.InvokeAsync("fetchPrereq", new object[] {
                        prereq}, this.fetchPrereqOperationCompleted, userState);
        }
        
        private void OnfetchPrereqOperationCompleted(object arg) {
            if ((this.fetchPrereqCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fetchPrereqCompleted(this, new fetchPrereqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getFeedback", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getFeedback(string title, string program, string crn) {
            object[] results = this.Invoke("getFeedback", new object[] {
                        title,
                        program,
                        crn});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getFeedbackAsync(string title, string program, string crn) {
            this.getFeedbackAsync(title, program, crn, null);
        }
        
        /// <remarks/>
        public void getFeedbackAsync(string title, string program, string crn, object userState) {
            if ((this.getFeedbackOperationCompleted == null)) {
                this.getFeedbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFeedbackOperationCompleted);
            }
            this.InvokeAsync("getFeedback", new object[] {
                        title,
                        program,
                        crn}, this.getFeedbackOperationCompleted, userState);
        }
        
        private void OngetFeedbackOperationCompleted(object arg) {
            if ((this.getFeedbackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFeedbackCompleted(this, new getFeedbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getName(string studentId) {
            object[] results = this.Invoke("getName", new object[] {
                        studentId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getNameAsync(string studentId) {
            this.getNameAsync(studentId, null);
        }
        
        /// <remarks/>
        public void getNameAsync(string studentId, object userState) {
            if ((this.getNameOperationCompleted == null)) {
                this.getNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNameOperationCompleted);
            }
            this.InvokeAsync("getName", new object[] {
                        studentId}, this.getNameOperationCompleted, userState);
        }
        
        private void OngetNameOperationCompleted(object arg) {
            if ((this.getNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNameCompleted(this, new getNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPreReq", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getPreReq(string courseId) {
            object[] results = this.Invoke("getPreReq", new object[] {
                        courseId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getPreReqAsync(string courseId) {
            this.getPreReqAsync(courseId, null);
        }
        
        /// <remarks/>
        public void getPreReqAsync(string courseId, object userState) {
            if ((this.getPreReqOperationCompleted == null)) {
                this.getPreReqOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPreReqOperationCompleted);
            }
            this.InvokeAsync("getPreReq", new object[] {
                        courseId}, this.getPreReqOperationCompleted, userState);
        }
        
        private void OngetPreReqOperationCompleted(object arg) {
            if ((this.getPreReqCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPreReqCompleted(this, new getPreReqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSemesters", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getSemesters() {
            object[] results = this.Invoke("getSemesters", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getSemestersAsync() {
            this.getSemestersAsync(null);
        }
        
        /// <remarks/>
        public void getSemestersAsync(object userState) {
            if ((this.getSemestersOperationCompleted == null)) {
                this.getSemestersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSemestersOperationCompleted);
            }
            this.InvokeAsync("getSemesters", new object[0], this.getSemestersOperationCompleted, userState);
        }
        
        private void OngetSemestersOperationCompleted(object arg) {
            if ((this.getSemestersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSemestersCompleted(this, new getSemestersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/removeRoster", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool removeRoster(string email) {
            object[] results = this.Invoke("removeRoster", new object[] {
                        email});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void removeRosterAsync(string email) {
            this.removeRosterAsync(email, null);
        }
        
        /// <remarks/>
        public void removeRosterAsync(string email, object userState) {
            if ((this.removeRosterOperationCompleted == null)) {
                this.removeRosterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveRosterOperationCompleted);
            }
            this.InvokeAsync("removeRoster", new object[] {
                        email}, this.removeRosterOperationCompleted, userState);
        }
        
        private void OnremoveRosterOperationCompleted(object arg) {
            if ((this.removeRosterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeRosterCompleted(this, new removeRosterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/encrypt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string encrypt(string key, string plainText) {
            object[] results = this.Invoke("encrypt", new object[] {
                        key,
                        plainText});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void encryptAsync(string key, string plainText) {
            this.encryptAsync(key, plainText, null);
        }
        
        /// <remarks/>
        public void encryptAsync(string key, string plainText, object userState) {
            if ((this.encryptOperationCompleted == null)) {
                this.encryptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnencryptOperationCompleted);
            }
            this.InvokeAsync("encrypt", new object[] {
                        key,
                        plainText}, this.encryptOperationCompleted, userState);
        }
        
        private void OnencryptOperationCompleted(object arg) {
            if ((this.encryptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.encryptCompleted(this, new encryptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/decrypt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string decrypt(string key, string cipherText) {
            object[] results = this.Invoke("decrypt", new object[] {
                        key,
                        cipherText});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void decryptAsync(string key, string cipherText) {
            this.decryptAsync(key, cipherText, null);
        }
        
        /// <remarks/>
        public void decryptAsync(string key, string cipherText, object userState) {
            if ((this.decryptOperationCompleted == null)) {
                this.decryptOperationCompleted = new System.Threading.SendOrPostCallback(this.OndecryptOperationCompleted);
            }
            this.InvokeAsync("decrypt", new object[] {
                        key,
                        cipherText}, this.decryptOperationCompleted, userState);
        }
        
        private void OndecryptOperationCompleted(object arg) {
            if ((this.decryptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.decryptCompleted(this, new decryptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void adminViewCompletedEventHandler(object sender, adminViewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class adminViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal adminViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void addCourseCompletedEventHandler(object sender, addCourseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addCourseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addCourseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void modCourseCompletedEventHandler(object sender, modCourseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modCourseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modCourseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void deleteCourseCompletedEventHandler(object sender, deleteCourseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteCourseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteCourseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void catalogViewCompletedEventHandler(object sender, catalogViewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class catalogViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal catalogViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void detailsViewCompletedEventHandler(object sender, detailsViewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class detailsViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal detailsViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void addFeedbackCompletedEventHandler(object sender, addFeedbackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addFeedbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addFeedbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void fetchPrereqCompletedEventHandler(object sender, fetchPrereqCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fetchPrereqCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fetchPrereqCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getFeedbackCompletedEventHandler(object sender, getFeedbackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFeedbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFeedbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getNameCompletedEventHandler(object sender, getNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getPreReqCompletedEventHandler(object sender, getPreReqCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPreReqCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPreReqCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getSemestersCompletedEventHandler(object sender, getSemestersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSemestersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSemestersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void removeRosterCompletedEventHandler(object sender, removeRosterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeRosterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeRosterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void encryptCompletedEventHandler(object sender, encryptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class encryptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal encryptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void decryptCompletedEventHandler(object sender, decryptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class decryptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal decryptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591